# =====================================================
# |          The Quick Guidance for SPARX             |
# |                   I-Ta Hsieh                      |
# |                  < Aug 2016 >                     |
# =====================================================


#######################################################
#                    INSTALLATION                     #
#######################################################

-- 1. DOWNLOAD THE SOURCE CODE
      * # download the source code from
        git clone https://github.com/itahsieh/sparx-alpha.git

-- 2. LOADING THE LIBRARY AND DEPENDENT PACKAGES
      THEN INSTALL
        # first of all, enter the directory
        # and checkout to the latest release
        cd sparx-alpha
        git checkout alpha-2.4.0

    * If you are the user/developer on TIARA`s cluster
        # install sparx on TIARA's cluster (oc/tc/px/xl)
        ./tiara-install.sh

    * If you are just the user for the applicational
      purpose on TIARA, try to load the SPARX module
      directly. Then just modify the preprocessor script
      to what you want.
        # load sparx module
        module add sparx

    * If you are using ubuntu 14.04 / 16.04,
        # install sparx
        ./ubuntu-install.sh

    * If you are a linux user
      and you are going to build the dependancy on your own
        # install the dependancies (at $HOME/opt)
        ./dep-install.sh
        # install sparx
        ./linux-install.sh

-- 3. TEST
        ./test.sh AMC


#######################################################
#                    THE TUTORIAL                     #
#######################################################
# 1. PREPROCESSOR
# -- build a Shu's collapsing cloud
# copy the model and grid template ( grid.py & model.py )
cp $HOME/sparx-alpha/preprocessor/presparx/Shu1D/*.py ./
# 'presparx' would generate SPARX HDF file ('model')
# and the plot (profile.png) of the profile
# '-e' estimates the mass error o the FEM mesh
# corresponding to exact model
presparx -o model -p -e

# non-LTE molecular excitation solver : AMC
# specify the model file with 'source',
# the population file with 'out',
# and the molecule name with 'molec'

sparx run task_amc \
source=model \
out=pops \
molec='hco+'

# making the image
sparx run task_lineobs \
source=pops \
out=map \
line=0 \
dist='1kpc' \
cell="['1asec','1asec']" \
npix="[128,128]"



#######################################################
#          HOW TO CREATE YOUR OWN SIMULATION          #
#######################################################

# modify the template of the grid and model profile
sparx-alpha/preprocessor/script

# A spherical 2D/3D preprocessor template
pre-sparx/SPH2D_preprocessor.py

# A nested 3D Cartesian preprocessor template
pre-sparx/nested3D.py


#######################################################
#               THINGS ABOUT NUMERICS                 #
#######################################################

- The most dominating numerical error in the scheme
  * AMC -- Monte Carlo ray sampling
        -- most computational demanding
           (0.5th order of accuracy in MC method)
        -- The other numerical errors could be eliminated easier

- How to determine and request the AMC error?
  * How large is the observational noise?
    -- set the numerical SNR over the instrumental SNR
  * "snr" flag
    -- typical value : 20

- How are the other errors in the whole simulation?
  * preprocessor :
    -- Error of FEM (Finite Element method)
    -- How many number of cell should we adopt?
       Suggestion : test the convergency of the total mass
                    make the error 1 order less than MC noise
  * AMC solver :
    -- MC noise : number of rays ('snr' flag)
    -- ALI stopping criteria :
       iteration error
       ALI stops until the error of the iteration 1/10 less than MC noise
    -- Detailed balance loop :
       inner iteration error
       ('minpop' flag, typically 1e-6)

  * Image mapping :
    --  How many resolution should be used when ray sampling?
        Suggestion :
        Twice finer than the âˆ†x in the grding of physical model
        ('cell' flag to refine the pixel size)
        Could double the sampling to check
        if there's significant change of the emission
        'subres' flag could be used for sub-level and
        specific region sampling



